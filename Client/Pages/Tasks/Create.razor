@page "/Tasks/Create"

@inject NavigationManager NavigationManager;
@inject Services.TasksService TasksService;

<FormEditor 
	Model="Model"
	OnValidSubmit="OnSubmitAsync"
	Type="Infrastructure.Enums.EditFormType.Create">
</FormEditor>

@code
{
	//protected override async Task OnInitializedAsync()
	protected override void OnInitialized()
	{
		Model =
			new ViewModels.Tasks.TaskViewModel();
	}

	public ViewModels.Tasks.TaskViewModel Model { get; set; }
	private ViewModels.Tasks.CreateRequestViewModel NewModel { get; set; }

	//private void OnSubmit()
	private async Task OnSubmitAsync()
	{
		// Save Data!
		//Save();
		bool flagResult = await SaveAsync();

		if (flagResult)
		{
			string uri = $"{Infrastructure.Pages.Utility.setUri<Client.Pages.Tasks.List>()}";
			NavigationManager.NavigateTo(uri: uri, forceLoad: false);
		}
	}

	//private async void Save()
	private async Task<bool> SaveAsync()
	{
		NewModel = new ViewModels.Tasks.CreateRequestViewModel()
			{
				Title = Model.Title,
			};

		var varResult = await TasksService.PostAsync(NewModel);
		bool flagReturn = false;
		if (varResult != null)
		{
			flagReturn = varResult.IsSuccess;
		}

		return flagReturn;

	}

}
